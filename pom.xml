<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.candor</groupId>
	<artifactId>bp</artifactId>
	<packaging>war</packaging>
	<version>1.0.0</version>
	<name>Proximity Places™</name>
	<description>
		Proximity Places™: GWT thick/fat client web application exposing a small set of 'gwit' cool features through the use of Google Places API.
	</description>
	<developers>
		<developer>
			<id>bp</id>
			<name>Bogdan-George Petridean</name>
		</developer>
	</developers>
	<licenses>
		<license>
			<distribution>All Rights Reserved.</distribution>
		</license>
	</licenses>
	<url>http://127.0.0.1:2017/proximity-places.html</url>
	<inceptionYear>2017</inceptionYear>
	<organization>
		<name>Bogdan-George Petridean</name>
		<url>https://www.linkedin.com/in/bogdan-petridean-43bbb435/</url>
	</organization>

	<properties>
		<gwt.snapshot.version>2.5.1</gwt.snapshot.version>
		<gwt.release.version>2.8.2</gwt.release.version>
		<maven.compiler.release>11</maven.compiler.release>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
	</properties>

	<repositories>
		<repository>
			<id>google-snapshots</id>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
			<url>https://oss.sonatype.org/content/repositories/google-snapshots</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt</artifactId>
				<version>${gwt.snapshot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>4.3.2.Final</version>
			</dependency>
			<dependency>
				<groupId>com.google.gwt.inject</groupId>
				<artifactId>gin</artifactId>
				<version>2.1.2</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>3.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.gwt.inject</groupId>
			<artifactId>gin</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
		</dependency>
	</dependencies>

	<build>
		<!-- Generate compiled stuff in the folder used for developing mode -->
		<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

		<plugins>

			<!-- Mojo's GWT Maven Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.release.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>i18n</goal>
							<goal>generateAsync</goal>
							<!-- <goal>test</goal> -->
						</goals>
					</execution>
				</executions>
				<!-- Plugin configuration. There are many available options, see gwt-maven-plugin 
					documentation at codehaus.org -->
				<configuration>
					<runTarget>/proximity-places.html</runTarget>

					<modules>
						<module>com.candor.bp.ProximityPlaces</module>
					</modules>

					<port>2017</port>

					<hostedWebapp>${webappDirectory}</hostedWebapp>

					<logLevel>INFO</logLevel>

					<i18nConstantsBundle>com.candor.bp.client.i18n.I18nConstants</i18nConstantsBundle>
					<i18nConstantsWithLookupBundle>com.candor.bp.client.i18n.I18nLookupConstants</i18nConstantsWithLookupBundle>
					<!-- do not generate Messages, we are using @Plural forms -->
					<!-- <i18nMessagesBundle>com.candor.bp.client.i18n.I18nMessages</i18nMessagesBundle> -->

					<generateDirectory>src/main/java</generateDirectory>

					<!-- GWT Compiler Global settings -->
					<!-- Generate exports for JsInterop purposes -->
					<generateJsInteropExports>true</generateJsInteropExports>
					<!-- Assign it a numeric value not higher than the number of your machine's 
						cores (logical cores also count) -->
					<localWorkers>8</localWorkers>
					<!-- JVM arguments with respect to your machine resources -->
					<extraJvmArgs>-Xms128m -Xmx2g -Xss4096k</extraJvmArgs>
					<superDevMode>true</superDevMode>
					<!-- Fail compilation if any input file contains an error -->
					<strict>true</strict>
				</configuration>
			</plugin>

			<!-- Copy project resources to the output directory -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${webappDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/webapp</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Copy static web files before executing gwt:run -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.3</version>
				<executions>
					<execution>
						<phase>compile</phase>
					</execution>
				</executions>
				<configuration>
					<webappDirectory>${webappDirectory}</webappDirectory>
				</configuration>
			</plugin>

			<!-- Compile the sources of your project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<!-- Bug in Maven, logic is inverted. False means do incremental compilation 
						@see https://issues.apache.org/jira/browse/MCOMPILER-209 -->
					<useIncrementalCompilation>false</useIncrementalCompilation>
					<release>${maven.compiler.release}</release>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.google.web.bindery</groupId>
						<artifactId>requestfactory-apt</artifactId>
						<version>${gwt.release.version}</version>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>

	<!-- Profiles for setting properties that are different for development, 
		compile reports and production. -->
	<profiles>

		<!-- GWT Development Mode default profile -->
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<gwt.module.suffix></gwt.module.suffix>
				<skip.create.local.war.folder>false</skip.create.local.war.folder>
				<gwt.style>OBFUSCATED</gwt.style>
				<!-- reduces compiled JS size by disabling some of java.lang.Class methods: 
					getName() -->
				<gwt.disableCastChecking>false</gwt.disableCastChecking>
				<!-- reduces compiled JS size by disabling run-time checking of cast 
					operations -->
				<gwt.disableClassMetadata>false</gwt.disableClassMetadata>
				<!-- Enables JavaScript output suitable for post-compilation by Closure 
					Compiler -->
				<gwt.compiler.closureFormattedOutput>false</gwt.compiler.closureFormattedOutput>
				<!-- use Closure Compiler to further optimize the output JS; Set this 
					to FALSE or comment it when you want to generate Compiler Metrics, otherwise 
					the metrics will not be generated -->
				<gwt.compiler.enableClosureCompiler>false</gwt.compiler.enableClosureCompiler>
				<!-- do NOT always recompile GWT; allow incremental compilation to -->
				<gwt.compiler.force>false</gwt.compiler.force>
				<!-- set it to true when in Development Mode, as it will make your compilation 
					faster by skipping some of the normal steps. -->
				<gwt.draftCompile>true</gwt.draftCompile>
				<gwt.compiler.incremental>false</gwt.compiler.incremental>
				<gwt.disableRunAsync>false</gwt.disableRunAsync>
				<!-- use the lowest level of GWT Compiler optimization for Development 
					Mode -->
				<gwt.compiler.optimizationLevel>0</gwt.compiler.optimizationLevel>
				<!-- do NOT use Aggressive GWT Compiler optimization for Development 
					Mode -->
				<gwt.compiler.disableAggressiveOptimization>true</gwt.compiler.disableAggressiveOptimization>
				<gwt.compiler.optimizeDataflow>false</gwt.compiler.optimizeDataflow>
				<gwt.compiler.ordinalizeEnums>false</gwt.compiler.ordinalizeEnums>
				<!-- EXPERIMENTAL: Emit extra information allow chrome dev tools to display 
					Java identifiers in many places instead of JavaScript functions. -->
				<gwt.compiler.methodNameDisplayMode>FULL</gwt.compiler.methodNameDisplayMode>
				<gwt.compiler.extra>extras</gwt.compiler.extra>
				<gwt.saveSource>true</gwt.saveSource>
				<gwt.compiler.methodNameDisplayMode>FULL</gwt.compiler.methodNameDisplayMode>
				<!-- Enable JavaScript Source Maps -->
				<gwt.compiler.useSourceMaps>true</gwt.compiler.useSourceMaps>
			</properties>
		</profile>

		<!-- GWT Development Mode Compile Report profile -->
		<profile>
			<id>development-compile-report</id>
			<properties>
				<gwt.compiler.force>true</gwt.compiler.force>
				<gwt.draftCompile>true</gwt.draftCompile>
				<gwt.style>DETAILED</gwt.style>
				<gwt.compiler.compileReport>true</gwt.compiler.compileReport>
				<gwt.compiler.compilerMetrics>true</gwt.compiler.compilerMetrics>
				<gwt.compiler.soycDetailed>false</gwt.compiler.soycDetailed>
				<gwt.compiler.enableJsonSoyc>false</gwt.compiler.enableJsonSoyc>
				<gwt.compiler.optimizationLevel>0</gwt.compiler.optimizationLevel>
				<gwt.compiler.optimizeDataflow>false</gwt.compiler.optimizeDataflow>
				<skip.create.local.war.folder>true</skip.create.local.war.folder>
			</properties>
		</profile>

		<!-- production profile -->
		<profile>
			<id>production</id>
			<properties>
				<!-- not defined -->
			</properties>
		</profile>
	</profiles>
</project>
